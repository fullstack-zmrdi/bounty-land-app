// flow-typed signature: ebff16683106e3a5ced8e81519b9c9f7
// flow-typed version: <<STUB>>/react-native-navigation_v^2.0.0-experimental.256/flow_v0.38.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'react-native-navigation'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */
type NavigatorStyleType = {
  navBarTextColor?: string,
  navBarBackgroundColor?: string,
  navBarButtonColor?: string,
  navBarHidden?: boolean,
  navBarHideOnScroll?: boolean,
  navBarTranslucent?: boolean,
  navBarTransparent?: boolean,
  topBarElevationShadowEnabled?: boolean,
  navBarNoBorder?: boolean,
  drawUnderNavBar?: boolean,
  drawUnderTabBar?: boolean,
  statusBarBlur?: boolean,
  navBarBlur?: boolean,
  tabBarHidden?: boolean,
  statusBarColor?: string,
  statusBarHideWithNavBar?: boolean,
  statusBarHidden?: boolean,
  statusBarTextColorScheme?: string,
  statusBarTextColorSchemeSingleScreen?: string,
  screenBackgroundColor?: string,
  orientation?: string
};

type ScreenOptions = {
  screen: string,
  title?: string,
  passProps?: { [key: string]: any },
  navigatorStyle?: NavigatorStyleType,
  navigatorButtons?: Object
};

type NavigatorButton = {
  id: string,
  icon?: any,
  title?: string,
  disabled?: boolean,
  disableIcontint?: boolean,
  showAction?: 'ifRoom'|'never'|'always'|'withText',
  buttonColor?: string,
  buttonFontSize?: number,
  buttonFontWeight?: string,
  testID?: string
};

type FabButton = {
  collapsedId: string,
  collapsedIcon?: any,
  backgroundColor?: string,
  expendedId?: string,
  expendedIcon?: any,
  actions?: Array<{ id: string, icon: any, backgroundColor: string}>
};

type NavigatorButtons = {
  rightButtons?: Array<NavigatorButton>,
  leftButtons?: Array<NavigatorButton>,
  fab?: FabButton
};

type RnNavigator = {
  push(options: ScreenOptions):void,
  pop():void,
  popToRoot():void,
  resetTo: Function,
  showModal(options: ScreenOptions):void,
  showLightBox: Function,
  dismissModal():void,
  dismissAllModals():void,
  dismissLightBox():void,
  showInAppNotification: Function,
  dismissInAppNotification: Function,
  setButtons(options: NavigatorButtons):void,
  setTitle(options: { title: string }):void,
  setSubTitle: Function,
  setTitleImage: Function,
  setStyle(options: NavigatorStyleType):void,
  toggleDrawer: Function,
  toggleTabs: Function,
  toggleNavBar: Function,
  setTabBadge: Function,
  switchToTab: Function,
  showSnackbar: Function,
  dismissSnackbar: Function,
  showContextualMenu: Function,
  dismissContextualMenu: Function,
  setOnNavigatorEvent(callback:Function):void,
  handleDeepLink: Function,
  onNavigatorEvent: Function,
  cleanup: Function
};

declare module 'react-native-navigation' {
  declare type TabOptions = {
    label?: string,
    icon?: any
  } & ScreenOptions;

  declare type TabBasedAppOptions = {
    tabs: Array<TabOptions>,
    tabsStyle?: Object,
    appStyle?: Object,
    passProps?: Object,
    animationType?: string
  };

  declare type SingleScreenAppOptions = {
    screen: ScreenOptions
  };

  declare type NavigationType = {
    startSingleScreenApp(screenOptions: SingleScreenAppOptions):void,
    startTabBasedApp(tabAppOptions: TabBasedAppOptions):void,
    registerComponent(screenID: string, generator: Function, store?: Object, Provider?: Function, options?: Object):Function,
    getRegisteredScreen: Function,
    showModal: Function,
    dismissModal: Function,
    dismissAllModals: Function,
    showSnackbar: Function,
    showLightBox: Function,
    dismissLightBox: Function,
    showInAppNotification: Function,
    dismissInAppNotification: Function,
    setEventHandler: Function,
    clearEventHandler: Function,
    handleDeepLink: Function
  };

  declare var exports: {
    Navigation: NavigationType
  };
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'react-native-navigation/scripts/release' {
  declare module.exports: any;
}

declare module 'react-native-navigation/src/deprecated/controllers/Constants' {
  declare module.exports: any;
}

declare module 'react-native-navigation/src/deprecated/controllers/index' {
  declare module.exports: any;
}

declare module 'react-native-navigation/src/deprecated/controllers/utils' {
  declare module.exports: any;
}

declare module 'react-native-navigation/src/deprecated/indexDeprecated.android' {
  declare module.exports: any;
}

declare module 'react-native-navigation/src/deprecated/indexDeprecated.ios' {
  declare module.exports: any;
}

declare module 'react-native-navigation/src/deprecated/platformSpecificDeprecated.android' {
  declare module.exports: any;
}

declare module 'react-native-navigation/src/deprecated/platformSpecificDeprecated.ios' {
  declare module.exports: any;
}

declare module 'react-native-navigation/src/index' {
  declare module.exports: any;
}

declare module 'react-native-navigation/src/Navigation' {
  declare module.exports: any;
}

declare module 'react-native-navigation/src/platformSpecific.android' {
  declare module.exports: any;
}

declare module 'react-native-navigation/src/platformSpecific.ios' {
  declare module.exports: any;
}

declare module 'react-native-navigation/src/PropRegistry' {
  declare module.exports: any;
}

declare module 'react-native-navigation/src/Screen' {
  declare module.exports: any;
}

// Filename aliases
declare module 'react-native-navigation/scripts/release.js' {
  declare module.exports: $Exports<'react-native-navigation/scripts/release'>;
}
declare module 'react-native-navigation/src/deprecated/controllers/Constants.js' {
  declare module.exports: $Exports<'react-native-navigation/src/deprecated/controllers/Constants'>;
}
declare module 'react-native-navigation/src/deprecated/controllers/index.js' {
  declare module.exports: $Exports<'react-native-navigation/src/deprecated/controllers/index'>;
}
declare module 'react-native-navigation/src/deprecated/controllers/utils.js' {
  declare module.exports: $Exports<'react-native-navigation/src/deprecated/controllers/utils'>;
}
declare module 'react-native-navigation/src/deprecated/indexDeprecated.android.js' {
  declare module.exports: $Exports<'react-native-navigation/src/deprecated/indexDeprecated.android'>;
}
declare module 'react-native-navigation/src/deprecated/indexDeprecated.ios.js' {
  declare module.exports: $Exports<'react-native-navigation/src/deprecated/indexDeprecated.ios'>;
}
declare module 'react-native-navigation/src/deprecated/platformSpecificDeprecated.android.js' {
  declare module.exports: $Exports<'react-native-navigation/src/deprecated/platformSpecificDeprecated.android'>;
}
declare module 'react-native-navigation/src/deprecated/platformSpecificDeprecated.ios.js' {
  declare module.exports: $Exports<'react-native-navigation/src/deprecated/platformSpecificDeprecated.ios'>;
}
declare module 'react-native-navigation/src/index.js' {
  declare module.exports: $Exports<'react-native-navigation/src/index'>;
}
declare module 'react-native-navigation/src/Navigation.js' {
  declare module.exports: $Exports<'react-native-navigation/src/Navigation'>;
}
declare module 'react-native-navigation/src/platformSpecific.android.js' {
  declare module.exports: $Exports<'react-native-navigation/src/platformSpecific.android'>;
}
declare module 'react-native-navigation/src/platformSpecific.ios.js' {
  declare module.exports: $Exports<'react-native-navigation/src/platformSpecific.ios'>;
}
declare module 'react-native-navigation/src/PropRegistry.js' {
  declare module.exports: $Exports<'react-native-navigation/src/PropRegistry'>;
}
declare module 'react-native-navigation/src/Screen.js' {
  declare module.exports: $Exports<'react-native-navigation/src/Screen'>;
}
